<apex:page controller="ResourcesAndAvailabilityController"
    showHeader="true"
    sidebar="false"
    title="Resources&Availability"
    standardStylesheets="false">

    <script src="https://ajax.googleapis.com/ajax/libs/angularjs/1.6.1/angular.min.js"></script>
    <link rel="stylesheet" href="//netdna.bootstrapcdn.com/bootstrap/3.1.1/css/bootstrap.min.css"/>

    <head>
        <meta charset="UTF-8"/>
        <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
    </head>

    <style type="text/css">

        .same-row {
            display: -webkit-box;
            display: -webkit-flex;
            display: -ms-flexbox;
            display: flex;
            flex-wrap: wrap;
        }
        .same-row > [class*='col-'] {
            display: flex;
            flex-direction: column;
        }

        .addInfoBody {
            border: 1px solid lightgrey;
            margin: 0px 0px 5px  0px;
        }

        .addInfoBookmark {
            border: 1px solid lightgrey;
            padding: 5px 0px;
            margin: 0px;
        }

        .form-control {
            width:auto;
            display:inline-block;
        }
        .form-group {
            margin: 0px;
        }
        .container {
            width: auto;
            height: 100%;
            margin: 5px 5px 0px 5px;
            padding: 5px;
            border: 1px solid black;
            border-radius: 5px;
        }

        .left-column .container {
            margin-right: 0px;
        }

        .paddingBottom {
            padding-bottom: 20px;
        }
        .left-column {
            padding-right: 0px;
        }
        .right-column {
            padding-left: 0px;
        }

        .hotpink {
            background-color: #F69393;
        }

        .hotpink:hover {
            background-color: hotpink;
        }
        .yellow {
            background-color: #EFDC5D;
        }

        .yellow:hover {
            background-color: #E4C707;
        }

        .lightblue {
            background-color: lightblue;
        }
        .lightgreen {
            background-color: #8FF78D;
        }


        .lightgreen:hover {
            background-color: #4AFA47;
        }
        .blue {
            background: #8D9BF7;
            color: white;
        }

        .concaveRed {
            background: linear-gradient(to bottom, #F69393, #FEFCEA);
        }

        .concaveGreen {
            background: linear-gradient(to bottom, #8FF78D, #FEFCEA);
        }

        .concaveYellow {
            background: linear-gradient(to bottom, #EFDC5D, #FEFCEA);
        }

        .weight {
            font-weight: bold;
        }

        .AddInfoTable {
            border-top: 0px solid;
            width: 100%;
        }

        .AddInfoTable td {
            vertical-align: top;
        }

        .AddInfoTitle {
            font-weight: bold;
            text-decoration: underline;
        }

        .titleFilter {
            border-bottom: 1px solid black;
            margin-bottom: 20px;
        }

        .withoutMarge {
            margin: 0px;
        }

        .withoutPadding {
            padding: 0px;
        }

        .borderBottom {
            border-bottom: 1px dotted black;
            margin: 10px;
            padding-bottom: 10px;
        }

        .scroll {
            overflow-y: scroll;
            overflow-x: hidden;
        }

        .addInfoBlock {
            -webkit-transform: translateX(0);
            transform: translateX(0);
            -webkit-transition: all 2s ease-in-out;
            transition: all 2s ease-in-out;
        }

        .addInfoBlock.hide {
            visibility: hidden;
            opacity: 0;
            filter: alpha(opacity=0);
            -webkit-transform: translateX(100%);
            transform: translateX(100%);
        }


    </style>

    <div ng-app="ResAndAvail" ng-controller="ResAndAvailCtrl">
        <div ng-show="getDataStatus != 'Finished'">
            Loading data... Please wait...
        </div>

        <div ng-show="getDataStatus == 'Finished'" class="ng-hide">

            <!-- Header's panels -->
            <div class="row">
                <!-- Header with logo -->
                <div id="divHeader" class="col-md-12">
                    <div class="container lightblue">
                        <apex:image id="VRPLogo" url="{!URLFOR($Resource.vrprce__Logos, '/VRP.png')}" height="10%" width="10%" />
                        VRP Thinking globally, delivering locally
                    </div>
                </div>

                <!-- Bookmarks panel -->
                <div id="bookmakerViewer" class="col-md-12">
                    <div class="container blue">
                        Bookmarked:
                        <span ng-show="bookmarkedPeople.length == 0">
                            None
                        </span>
                        <button id="btnReserve" class="btn btn-default" ng-show="bookmarkedPeople.length > 0">
                            Reserve / Allocate Selected
                        </button>
                    </div>
                </div>

                <!-- Searching panel -->
                <div class="col-md-12">
                    <div class="container blue">
                        <div class="col-md-5 text-center">
                            <label for="slcProjects">Projects</label>
                            <select id="slcProjects" class="form-control" ng-options="project.Name for project in allDataFromServer.Projects" ng-model="filters.selectedProject">
                            </select>

                            <label class="checkbox-inline" >
                                <input type="checkbox" id="chbProjectHistory" ng-model="filters.projectHistory"/>
                                Include historical data
                            </label>
                        </div>

                        <div class="col-md-5 text-center">
                            <label for="slcClients">Client</label>
                            <select id="slcClients" class="form-control" ng-options="client.Account__r.Name for client in allDataFromServer.Clients" ng-model="filters.selectedClient">
                            </select>

                            <label class="checkbox-inline" >
                                <input type="checkbox" id="chbClientHistory" ng-model="filters.clientHistory"/>
                                Include historical data
                            </label>
                        </div>

                        <div class="col-md-2 text-center vcenter">
                            <button id="btnMapView" class="" ng-click="changeMapView()">
                                {{isMapChanged ? "Table View" : "Map View"}}
                            </button>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Main table panel -->
            <div class="row same-row">
                <div class="col-md-10 left-column ">
                    <div class="container">

                        <div id="divMainTable" >

                            <!-- Table view -->
                            <table class="table"  ng-if="!isMapChanged">
                                <thead>
                                    <th ng-repeat="field in tableFields">
                                      <a ng-click="sort.changeSort(field.fieldName)" ng-if="field.type != 'defaultString'">
                                        <div>
                                            {{field.label}}
                                            <span ng-show="sort.sortColumn == field.fieldName && !sort.sortReverse">▲</span>
                                            <span ng-show="sort.sortColumn == field.fieldName && sort.sortReverse">▼</span>
                                        </div>
                                      </a>
                                      <a ng-click="sort.defaultReverse = !sort.defaultReverse" ng-if="field.type == 'defaultString'" style="color: gray;">
                                        <div>
                                            {{field.label}}
                                            <span ng-show="sort.defaultColumn == field.fieldName && !sort.defaultReverse">▲</span>
                                            <span ng-show="sort.defaultColumn == field.fieldName && sort.defaultReverse">▼</span>
                                        </div>
                                      </a>
                                    </th>
                                </thead>
                                <tbody>
                                    <!-- Main rows of table -->
                                    <tr ng-repeat-start="developer in tableData | projects:filters.selectedProject:filters.projectHistory | clients:filters.selectedClient:filters.clientHistory | accounts:filters.accounts | departments:filters.departments | available:filters.immediateAvailable | orderBy:sort.getColumns() | paginator:paginator" ng-class="developer.availabilityHours == 0 ? 'hotpink' : (developer.Immediate <= 4 ? 'yellow' : 'lightgreen')" ng-click="isAddInfoVisible = !isAddInfoVisible">
                                        <td ng-repeat="field in tableFields">
                                            <div ng-if="field.type == 'string'">
                                                {{getValue(developer, field.fieldName)}}
                                            </div>
                                            <div ng-if="field.type == 'defaultString'">
                                                {{getValue(developer, field.fieldName)}}
                                            </div>
                                            <div ng-if="field.type == 'boolean'">
                                                <span ng-show="getValue(developer, field.fieldName)"><apex:image value="/img/permissions_confirm16.gif"/></span>
                                            </div>
                                            <div ng-if="field.type == 'addString'">
                                                {{getValue(developer, field.fieldName)}}{{getValue(developer, field.addFieldName)}}
                                            </div>
                                            <div ng-if="field.type == 'date'">
                                                {{getValue(developer, field.fieldName) | date:"MM/dd/yyyy"}}
                                            </div>
                                        </td>
                                    </tr>
                                    <!-- Add information for row -->
                                    <tr ng-show="isAddInfoVisible" ng-repeat-end="ng-repeat-end" class="addInfoBlock">
                                       <td colspan="11" ng-class="developer.availabilityHours == 0 ? 'concaveRed' : (developer.Immediate <= 4 ? 'concaveYellow' : 'concaveGreen')" >
                                            <div class="row">
                                                <div class="col-md-4">
                                                    <p class="AddInfoTitle">Contact Infornation</p>
                                                    <div class="addInfoBody">
                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Email</div>
                                                            <div class="value col-md-8">{{developer.contact.Email}}</div>
                                                        </div>
                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Phone</div>
                                                            <div class="value col-md-8">{{developer.contact.Phone}}</div>
                                                        </div>
                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Skype</div>
                                                            <div class="value col-md-8">{{developer.contact.Skype__c}}</div>
                                                        </div>
                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Google Talk</div>
                                                            <div class="value col-md-8">{{developer.contact.Google_Talk__c}}</div>
                                                        </div>

                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Hired Date</div>
                                                            <div class="value col-md-8">{{developer.contact.Hired_Date__c | date:"MM/dd/yyyy"}}</div>
                                                        </div>
                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Emergensy phone</div>
                                                            <div class="value col-md-8">{{developer.contact.Emergency_Phone__c}}</div>
                                                        </div>
                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Vacation Last</div>
                                                            <div class="value col-md-8">{{developer.lastVacation}}</div>
                                                        </div>
                                                        <div class="withoutMarge row">
                                                            <div class="key col-md-4">Vacation Next</div>
                                                            <div class="value col-md-8">{{developer.nextVacation}}</div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4 ">
                                                    <p class="AddInfoTitle">Project Historical Data</p>
                                                    <div class="addInfoBody scroll" >
                                                        <div class="row borderBottom" ng-repeat="project in developer.contact.Resource_Projects__r">
                                                            <div class="withoutMarge col-md-6 text-left" >
                                                                {{project.Project__r.Name}}
                                                            </div>
                                                            <div class="withoutMarge col-md-6 text-right" >
                                                                {{project.Start_Date__c | date:"MMMM yyyy"}}
                                                                -
                                                                {{project.End_Date__c | date:"MMMM yyyy"}}
                                                            </div>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="col-md-4">
                                                    <p class="AddInfoTitle">Skills and Certificates</p>
                                                    <div class="addInfoBody scroll">
                                                        <p class="withoutMarge" ng-repeat="skill in developer.contact.Employees__r.Skill__r.Name">
                                                            {{skill}}
                                                        </p>
                                                        <p class="withoutMarge" ng-repeat="certificate in developer.contact.Employees_Certifications__r.Certificate__r.Name">
                                                            {{certificate}}
                                                        </p>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="row addInfoBookmark">
                                                <div class="col-md-4 withoutMarge text-center" >
                                                    <label for="slcProjectsForAllocation">Select Project for Allocation:</label>
                                                    <select id="slcProjectsForAllocation" class="form-control">
                                                        <option ng-repeat="project in allDataFromServer.Projects">{{project.Name}}</option>
                                                    </select>
                                                </div>

                                                    <div class="col-md-2 withoutMarge text-center form-horizontal" >
                                                        <div class="input-group date" id="datetimepicker1" >
                                                            <input id="inpFromDate" type="text" class="form-control" />
                                                            <span class="input-group-addon">
                                                                <span class="glyphicon glyphicon-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-2 withoutMarge text-center form-horizontal" >
                                                        <div class="input-group date" id="datetimepicker2">
                                                            <input id="inputToDate" type="text" class="form-control" />
                                                            <span class="input-group-addon">
                                                                <span class="glyphicon glyphicon-calendar"></span>
                                                            </span>
                                                        </div>
                                                    </div>

                                                    <div class="col-md-4 withoutMarge vcenter text-center" >
                                                        <label for="slcBusyness">Busyness:</label>
                                                        <select id="slcBusyness" class="form-control">
                                                            <option >8 Hours</option>
                                                            <option >4 Hours</option>
                                                        </select>
                                                        <button id="btnBookmarkFromAddInfo" class="btn btn-default ">
                                                            Bookmark
                                                        </button>
                                                    </div>
                                                </div>
                                       </td>
                                    </tr>
                                </tbody>
                            </table>

                            <!-- Map view -->
                            <table class="table"  ng-if="isMapChanged" >
                                <thead>
                                    <th>Full Name</th>
                                    <th>Jan 2017</th>
                                    <th>Feb 2017</th>
                                    <th>Mar 2017</th>
                                    <th>Apr 2017</th>
                                    <th>May 2017</th>
                                    <th>Jun 2017</th>
                                    <th>Jul 2017</th>
                                    <th>Aug 2017</th>
                                    <th>Sep 2017</th>
                                    <th>Oct 2017</th>
                                    <th>Nov 2017</th>
                                    <th>Dec 2017</th>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="developer in tableData | paginator:paginator" >
                                        <td>{{developer.contact.Name}}</td>
                                        <td colspan="12" ng-class="developer.availabilityHours == 0 ? 'hotpink' : (developer.Immediate <= 4 ? 'yellow' : 'lightgreen')">

                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>

                        <!-- Paginator -->
                        <div id="PaginationBlock" class="row ">
                            <div class="col-md-4 my-col text-left">
                                <label for="slcRecordsOnPage" >Records on page</label>
                                <select   ng-model="paginator.developersPerPage"
                                          ng-options="records for records in paginator.POSSIBLE_DEVELOPERS_PER_PAGE"
                                          id="slcRecordsOnPage"
                                          class="form-control">
                                </select>
                            </div>
                            <div class="col-md-4 my-col text-center">
                                <div>
                                    <button class="btn btn-secondary " ng-disabled="!paginator.hasPrevious()" ng-click="paginator.pageBack()">
                                        &lt; Previous
                                    </button>
                                    <span>
                                        {{paginator.showPageInfo()}}
                                    </span>
                                    <button class="btn btn-secondary " ng-disabled="!paginator.hasNext()" ng-click="paginator.pageForward()">
                                        Next &gt;
                                    </button>
                                </div>
                            </div>
                            <div class="col-md-4 my-col text-right">
                                <label for="slcPages" >Page</label>
                                <select   ng-model="paginator.currentPage"
                                          ng-options="page + 1 for page in paginator.pages()"
                                          id="slcPages"
                                          class="form-control">
                                </select>
                                <label> of {{paginator.numberOfPages()}} </label>
                            </div>
                        </div>

                    </div>
                </div>

                <!-- Filter panel -->
                <div   class="col-md-2 right-column " >
                    <div class="container row" >
                        <div id="divRightBunner" class="titleFilter">
                            <h4>Filter Results</h4>
                        </div>
                        <div>
                            <div class="paddingBottom">
                                <p class="weight">Account</p>
                                <div ng-repeat="account in filters.accounts">
                                    <label class="checkbox-inline">
                                        <input type="checkbox" ng-model="account['Checked']"/> {{account.Name}}
                                    </label>
                                </div>
                            </div>
                            <div class="paddingBottom">
                                <p class="weight">Department</p>
                                <div ng-repeat="department in filters.departments" >
                                    <label class="checkbox-inline" >
                                        <input type="checkbox" ng-model="department['Checked']"/> {{department.Name}}
                                    </label>
                                </div>
                            </div>
                            <div class="paddingBottom">
                                <p class="weight">Immediately available</p>
                                <label class="checkbox-inline" >
                                    <input type="checkbox" id="chbAvailable" ng-model="filters.immediateAvailable"/> Yes
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>

    <script>

        var ResAndAvailApp = angular.module('ResAndAvail', []);

        ResAndAvailApp.constant('tableFields', [
            {
                'label': 'Full Name',
                'fieldName': 'contact.Name',
                'type': 'string'
            },
            {
                'label': 'Department',
                'fieldName': 'contact.Job_Title__c',
                'type': 'defaultString'
            },
            {
                'label': 'Experience Level',
                'fieldName': 'contact.Experience_Level__c',
                'type': 'string'
            },
            {
                'label': 'English Level',
                'fieldName': 'contact.English_Level__c',
                'type': 'string'
            },
            {
                'label': 'US Visa',
                'fieldName': 'contact.Employee_Private_Documents__r',
                'type': 'boolean'
            },
            {
                'label': 'Immediate Availability (h)',
                'fieldName': 'availabilityHours',
                'addFieldName': 'availabilityAddInfo',
                'type': 'addString'
            },
            {
                'label': 'Project Allocation',
                'fieldName': 'currentProject.Project__r.Name',
                'type': 'string'
            },
            {
                'label': 'From',
                'fieldName': 'currentProject.Start_Date__c',
                'type': 'date'
            },
            {
                'label': 'To',
                'fieldName': 'currentProject.End_Date__c',
                'type': 'date'
            },
            {
                'label': 'Team Lead',
                'fieldName': 'contact.Employee_User__r.Manager.Name',
                'type': 'string'
            },
            {
                'label': 'Account',
                'fieldName': 'contact.Account.Name',
                'type': 'string'
            }
        ]);

        ResAndAvailApp.filter('paginator', function() {
            return function(input, paginator) {
                if (paginator.developersCount != input.length) {
                    paginator.developersCount = input.length;
                    paginator.currentPage = 0;
                }
                var startPosition = paginator.currentPage * paginator.developersPerPage;
                return input.slice(startPosition, startPosition + paginator.developersPerPage);
            };
        });

        ResAndAvailApp.filter('projects', function() {
            return function(input, project, history) {
                if (!project || !project.hasOwnProperty('Id')) {
                    return input;
                }
                return input.filter(function(value) {
                    if (!history) {
                        return (value.hasOwnProperty('currentProject') && value.currentProject.Project__c == project.Id);
                    }
                    if (!value.contact.Resource_Projects__r) {
                        return false;
                    }
                    var result = false;
                    value.contact.Resource_Projects__r.forEach(function(value) {
                        result = (value.Project__c == project.Id) || result;
                    });
                    return result;
                });
            };
        });

        ResAndAvailApp.filter('clients', function() {
            return function(input, client, history) {
                if (!client || !client.hasOwnProperty('Id')) {
                    return input;
                }
                return input.filter(function(value) {
                    if (!history) {
                        return (value.hasOwnProperty('currentProject') && value.currentProject.Project__r.Customer__c == client.Id);
                    }
                    if (!value.contact.Resource_Projects__r) {
                        return false;
                    }
                    var result = false;
                    value.contact.Resource_Projects__r.forEach(function(value) {
                        result = (value.Project__r.Customer__c == client.Id) || result;
                    });
                    return result;
                });
            };
        });

        ResAndAvailApp.filter('accounts', function() {
            var someChecked = function(value) {
                return value.Checked;
            }
            var everyChecked = function(value) {
                return value.Checked;
            }
            return function(input, accounts) {
                if (!accounts.some(someChecked) || accounts.every(everyChecked)) {
                    return input;
                }
                var selectedAccounts = {};
                accounts.forEach(function(value) {
                    if (value.Checked) {
                        selectedAccounts[value.Name] = true;
                    }
                });
                return input.filter(function(value) {
                    return selectedAccounts.hasOwnProperty(value.contact.Account.Name);
                });
            };
        });

        ResAndAvailApp.filter('departments', function() {
            var someChecked = function(value) {
                return value.Checked;
            }
            var everyChecked = function(value) {
                return value.Checked;
            }
            return function(input, departments) {
                if (!departments.some(someChecked) || departments.every(everyChecked)) {
                    return input;
                }
                var selectedDepartments = {};
                departments.forEach(function(value) {
                    if (value.Checked) {
                        selectedDepartments[value.Name] = true;
                    }
                });
                return input.filter(function(value) {
                    return selectedDepartments.hasOwnProperty(value.contact.Job_Title__c);
                });
            };
        });

        ResAndAvailApp.filter('available', function() {
            return function(input, available) {
                if (!available) {
                    return input;
                }
                return input.filter(function(value) {
                    return value.availabilityHours > 0;
                });
            };
        });

        ResAndAvailApp.factory('getData', ['$q', '$rootScope', function($q, $rootScope) {
            return function(inputString) {
                var deferred = $q.defer();
                if ($rootScope.getDataStatus != 'InProgress') {
                    $rootScope.getDataStatus = 'InProgress';
                    Visualforce.remoting.Manager.invokeAction(
                        '{!$RemoteAction.ResourcesAndAvailabilityController.getData}',
                        JSON.stringify(inputString),
                        function(result, event) {
                            $rootScope.$apply(function() {
                                if (event.status) {
                                    deferred.resolve(result);
                                    $rootScope.getDataStatus = 'Finished';
                                } else {
                                    deferred.reject(event);
                                    $rootScope.getDataStatus = 'Finished';
                                }
                            })
                        },
                        { buffer: true, escape: true, timeout: 30000 }
                    );
                } else {
                    deferred = null;
                    return null;
                }
                return deferred.promise;
            }
        }]);

        ResAndAvailApp.controller('ResAndAvailCtrl', ['$scope', '$filter' ,'getData', 'tableFields', function($scope, $filter, getData, tableFields) {
            $scope.allDataFromServer = {};
            $scope.tableData = [];
            $scope.tableFields = tableFields;
            $scope.getValue = function(objectIn, path) {
                return path.split('.').reduce(function(prevObject, pathName) {
                    return (prevObject != null && prevObject.hasOwnProperty(pathName)) ? prevObject[pathName] : null;
                }, objectIn);
            }

            $scope.bookmarkedPeople = [];

            $scope.isMapChanged = false;

            $scope.changeMapView = function() {
                $scope.isMapChanged = !$scope.isMapChanged;
            }

            $scope.filters = {
                selectedProject: null,
                projectHistory: false,
                selectedClient: null,
                clientHistory: false,
                accounts: [],
                departments: [],
                immediateAvailable: false
            };

            $scope.sort = {
                defaultColumn: 'contact.Job_Title__c',
                defaultReverse: false,
                sortColumn: 'contact.Name',
                sortReverse: false,
                getColumns: function() {
                    var result = [];
                    result.push((this.defaultReverse ? '-' : '+') + this.defaultColumn);
                    result.push((this.sortReverse ? '-' : '+') + this.sortColumn);
                    return result;
                },
                changeSort: function(columnName) {
                    if (this.sortColumn != columnName) {
                      this.sortReverse = true;
                    }
                    this.sortReverse = !this.sortReverse;
                    this.sortColumn = columnName;
                }
            };

            $scope.paginator = {
                POSSIBLE_DEVELOPERS_PER_PAGE: [5, 10, 20, 50, 100],
                currentPage: 0,
                developersPerPage: 0,
                developersCount: 0,
                numberOfPages: function() {
                    return Math.ceil(this.developersCount / this.developersPerPage);
                },
                hasPrevious: function() {
                    return this.currentPage > 0;
                },
                hasNext: function() {
                    return this.currentPage < this.numberOfPages() - 1;
                },
                pageBack: function() {
                    this.currentPage = this.currentPage - 1;
                },
                pageForward: function() {
                    this.currentPage = this.currentPage + 1;
                },
                showPageInfo: function() {
                    let fromRecord = (this.developersCount > 0) ? this.currentPage * this.developersPerPage + 1 : 0;
                    let lastRecordOnPage = (this.currentPage + 1) * this.developersPerPage;
                    let toRecord = (lastRecordOnPage > this.developersCount) ? this.developersCount : lastRecordOnPage;
                    return fromRecord + ' - ' + toRecord + ' of ' + this.developersCount;
                },
                pages: function() {
                    let arr = [];
                    for (var i = 0; i < this.numberOfPages(); i++) {
                        arr.push(i);
                    }
                    return arr;
                },
                initPaginator: function() {
                    this.developersPerPage = this.POSSIBLE_DEVELOPERS_PER_PAGE[0];
                }
            };
            $scope.paginator.initPaginator();

            $scope.readingDataForTable = function() {
                $scope.tableData = $scope.allDataFromServer.ContactsWrap;
                $scope.filters.selectedProject = $scope.allDataFromServer.Projects[0];
                $scope.filters.selectedClient = $scope.allDataFromServer.Clients[0];
                $scope.filters.accounts = $scope.allDataFromServer.Accounts.map(function(value) {
                    return {
                        Name: value,
                        Checked: false
                    }
                });
                $scope.filters.departments = $scope.allDataFromServer.Departments.map(function(value) {
                    return {
                        Name: value,
                        Checked: false
                    }
                });
            }

            $scope.updateDataFromServer = function() {
                var def = getData( {keyword: ''} );
                if (def != null) {
                    $scope.queryQueue = false;
                    def.then(
                        function(result) {
                            $scope.allDataFromServer = result;
                            if ($scope.queryQueue == true) {
                                $scope.updateDataFromServer();
                            }
                            $scope.readingDataForTable();
                        },
                        function(error) {
                            $scope.allDataFromServer = error;
                        }
                    );
                } else {
                    $scope.queryQueue = true;
                }
            };
            $scope.updateDataFromServer();

        }]);

    </script>


</apex:page>